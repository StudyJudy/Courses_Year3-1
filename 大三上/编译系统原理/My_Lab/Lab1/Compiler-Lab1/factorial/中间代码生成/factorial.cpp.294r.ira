
;; Function __static_initialization_and_destruction_0.constprop (_Z41__static_initialization_and_destruction_0ii.constprop.0, funcdef_no=2280, decl_uid=49870, cgraph_uid=1024, symbol_order=1202) (executed once)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
rescanning insn with uid = 14.
deleting insn with uid = 12.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
Reg 82 uninteresting
Reg 83 uninteresting
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 82: (insn_list:REG_DEP_TRUE 5 (nil))
init_insns for 83: (insn_list:REG_DEP_TRUE 8 (nil))

Pass 0 for finding pseudo/allocno costs

    a1 (r83,l0) best DREG, allocno DREG
    a0 (r82,l0) best SIREG, allocno SIREG

  a0(r82,l0) costs: AREG:4000,4000 DREG:4000,4000 CREG:4000,4000 BREG:4000,4000 SIREG:1000,1000 DIREG:4000,4000 AD_REGS:4000,4000 CLOBBERED_REGS:4000,4000 Q_REGS:4000,4000 NON_Q_REGS:4000,4000 TLS_GOTBASE_REGS:4000,4000 GENERAL_REGS:4000,4000 SSE_FIRST_REG:18000,18000 NO_REX_SSE_REGS:18000,18000 SSE_REGS:18000,18000 MMX_REGS:36000,36000 INT_SSE_REGS:36000,36000 ALL_REGS:528000,528000 MEM:17000,17000
  a1(r83,l0) costs: AREG:2000,2000 DREG:-1000,-1000 CREG:2000,2000 BREG:2000,2000 SIREG:2000,2000 DIREG:2000,2000 AD_REGS:2000,2000 CLOBBERED_REGS:2000,2000 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:12000,12000 NO_REX_SSE_REGS:12000,12000 SSE_REGS:12000,12000 MMX_REGS:23000,23000 INT_SSE_REGS:23000,23000 ALL_REGS:316000,316000 MEM:11000,11000


Pass 1 for finding pseudo/allocno costs

    r83: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r82,l0) costs: AREG:8000,8000 DREG:8000,8000 CREG:8000,8000 BREG:8000,8000 SIREG:4000,1000 DIREG:8000,8000 AD_REGS:8000,8000 CLOBBERED_REGS:4000,4000 Q_REGS:8000,8000 NON_Q_REGS:4000,4000 TLS_GOTBASE_REGS:4000,4000 GENERAL_REGS:4000,4000 SSE_FIRST_REG:30000,30000 NO_REX_SSE_REGS:30000,30000 SSE_REGS:30000,30000 MMX_REGS:65000,65000 INT_SSE_REGS:39000,39000 ALL_REGS:534000,534000 MEM:30000,30000
  a1(r83,l0) costs: AREG:4000,4000 DREG:2000,-1000 CREG:4000,4000 BREG:4000,4000 SIREG:4000,4000 DIREG:4000,4000 AD_REGS:2000,2000 CLOBBERED_REGS:2000,2000 Q_REGS:2000,2000 NON_Q_REGS:4000,4000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:18000,18000 NO_REX_SSE_REGS:18000,18000 SSE_REGS:18000,18000 MMX_REGS:39000,39000 INT_SSE_REGS:26000,26000 ALL_REGS:322000,322000 MEM:18000,18000

   Insn 15(l0): point = 0
   Insn 14(l0): point = 2
   Insn 11(l0): point = 4
   Insn 9(l0): point = 6
   Insn 8(l0): point = 8
   Insn 7(l0): point = 10
   Insn 6(l0): point = 12
   Insn 5(l0): point = 14
 a0(r82): [5..14]
 a1(r83): [7..8]
Compressing live ranges: from 17 to 2 - 11%
Ranges after the compression:
 a0(r82): [0..1]
 a1(r83): [0..1]
+++Allocating 16 bytes for conflict table (uncompressed size 16)
;; a0(r82,l0) conflicts: a1(r83,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1

;; a1(r83,l0) conflicts: a0(r82,l0)
;;     total conflict hard regs:
;;     conflict hard regs:


  pref0:a1(r83)<-hr1@1500
  pref1:a0(r82)<-hr4@1500
  regions=1, blocks=3, points=2
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r82 1r83
    modified regnos: 82 83
    border:
    Pressure: GENERAL_REGS=3
    Hard reg set forest:
      0:( 0-6 8-15 20-51)@0
        1:( 0-6 36-43)@38000
          2:( 0 2-6 36-43)@52000
      Allocno a0r82 of GENERAL_REGS(15) has 14 avail. regs  0 2-6 36-43, node:  0 2-6 36-43 (confl regs =  1 7-35 44-75)
      Allocno a1r83 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-75)
      Forming thread from colorable bucket:
      Pushing a1(r83,l0)(cost 0)
      Pushing a0(r82,l0)(cost 0)
      Popping a0(r82,l0)  --         assign reg 6
      Popping a1(r83,l0)  --         assign reg 1
Disposition:
    0:r82  l0     6    1:r83  l0     1
New iteration of spill/restore move
+++Costs: overall 3000, reg 3000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


__static_initialization_and_destruction_0.constprop

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 7 [sp]
;;  ref usage 	r0={3d} r1={4d,1u} r2={3d} r4={4d,1u} r5={5d,2u} r6={1d,2u} r7={1d,4u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,1u} r17={2d} r18={2d} r19={1d,2u} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={3d} r37={3d} r38={2d} r39={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r82={1d,2u} r83={1d,1u} 
;;    total ref usage 175{159d,16u,0e} in 8{6 regular + 2 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:DI 82)
        (symbol_ref:DI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 0x7f584a229c60 __ioinit>)) "/usr/include/c++/11/iostream":74:25 74 {*movdi_internal}
     (expr_list:REG_EQUIV (symbol_ref:DI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 0x7f584a229c60 __ioinit>)
        (nil)))
(insn 6 5 7 2 (set (reg:DI 5 di)
        (reg/f:DI 82)) "/usr/include/c++/11/iostream":74:25 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 0x7f584a229c60 __ioinit>)
        (nil)))
(call_insn 7 6 8 2 (call (mem:QI (symbol_ref:DI ("_ZNSt8ios_base4InitC1Ev") [flags 0x41]  <function_decl 0x7f584a520200 __ct_comp >) [0 __ct_comp  S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/iostream":74:25 813 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSt8ios_base4InitC1Ev") [flags 0x41]  <function_decl 0x7f584a520200 __ct_comp >)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 8 7 9 2 (set (reg/f:DI 83)
        (symbol_ref:DI ("__dso_handle") [flags 0x42]  <var_decl 0x7f5849dbb900 __dso_handle>)) "/usr/include/c++/11/iostream":74:25 74 {*movdi_internal}
     (expr_list:REG_EQUIV (symbol_ref:DI ("__dso_handle") [flags 0x42]  <var_decl 0x7f5849dbb900 __dso_handle>)
        (nil)))
(insn 9 8 11 2 (set (reg:DI 1 dx)
        (reg/f:DI 83)) "/usr/include/c++/11/iostream":74:25 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 83)
        (expr_list:REG_EQUAL (symbol_ref:DI ("__dso_handle") [flags 0x42]  <var_decl 0x7f5849dbb900 __dso_handle>)
            (nil))))
(insn 11 9 14 2 (set (reg:DI 4 si)
        (reg/f:DI 82)) "/usr/include/c++/11/iostream":74:25 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 82)
        (expr_list:REG_EQUAL (symbol_ref:DI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 0x7f584a229c60 __ioinit>)
            (nil))))
(insn 14 11 15 2 (set (reg:DI 5 di)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZNSt8ios_base4InitD1Ev") [flags 0x41]  <function_decl 0x7f584a520400 __dt_comp >)
                    ] UNSPEC_GOTPCREL)) [25  S8 A8])) "/usr/include/c++/11/iostream":74:25 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZNSt8ios_base4InitD1Ev") [flags 0x41]  <function_decl 0x7f584a520400 __dt_comp >)
        (nil)))
(call_insn/j 15 14 16 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__cxa_atexit") [flags 0x41]  <function_decl 0x7f5849dfc400 __cxa_atexit>) [0 __cxa_atexit S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/11/iostream":74:25 828 {*sibcall_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_atexit") [flags 0x41]  <function_decl 0x7f5849dfc400 __cxa_atexit>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(barrier 16 15 0)

;; Function main (main, funcdef_no=1778, decl_uid=44906, cgraph_uid=512, symbol_order=542) (executed once)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 10 n_edges 11 count 10 (    1)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;;
;; Loop 1
;;  header 4, latch 4
;;  depth 1, outer 0
;;  nodes: 4
;; 2 succs { 3 6 }
;; 3 succs { 4 }
;; 4 succs { 4 5 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 9 8 }
;; 8 succs { }
;; 9 succs { 1 }
rescanning insn with uid = 37.
deleting insn with uid = 35.
Removing SCRATCH to p99 in insn #4 (nop 2)
rescanning insn with uid = 4.
Removing SCRATCH to p100 in insn #45 (nop 3)
rescanning insn with uid = 45.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 10 n_edges 11 count 10 (    1)
Reg 92 uninteresting
Reg 88 uninteresting
Reg 93 uninteresting
Reg 98 uninteresting
Reg 85: local to bb 7 def dominates all uses has unique first use
Examining insn 34, def for 85
  all ok
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;;
;; Loop 1
;;  header 4, latch 4
;;  depth 1, outer 0
;;  nodes: 4
;; 2 succs { 3 6 }
;; 3 succs { 4 }
;; 4 succs { 4 5 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 9 8 }
;; 8 succs { }
;; 9 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 92: (insn_list:REG_DEP_TRUE 12 (nil))
init_insns for 93: (insn_list:REG_DEP_TRUE 31 (nil))
Reg 91 had equivalence, but can't be eliminated

Pass 0 for finding pseudo/allocno costs

    a0 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a10 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a2 (r98,l0) best AREG, allocno AREG
    a3 (r93,l0) best DIREG, allocno DIREG
    a8 (r92,l0) best DIREG, allocno DIREG
    a9 (r91,l0) best SIREG, allocno SIREG
    a7 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a13 (r87,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a5 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a12 (r86,l1) best SIREG, allocno SIREG
    a4 (r86,l0) best SIREG, allocno SIREG
    a1 (r85,l0) best DIREG, allocno DIREG
    a11 (r84,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a6 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r100,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:660,660 NO_REX_SSE_REGS:660,660 SSE_REGS:660,660 MMX_REGS:1430,1430 INT_SSE_REGS:1430,1430 ALL_REGS:23320,23320 MEM:660,660
  a1(r85,l0) costs: AREG:220,220 DREG:220,220 CREG:220,220 BREG:220,220 SIREG:220,220 DIREG:-110,-110 AD_REGS:220,220 CLOBBERED_REGS:220,220 Q_REGS:220,220 NON_Q_REGS:220,220 TLS_GOTBASE_REGS:220,220 GENERAL_REGS:220,220 SSE_FIRST_REG:1320,1320 NO_REX_SSE_REGS:1320,1320 SSE_REGS:1320,1320 MMX_REGS:2090,2090 INT_SSE_REGS:2090,2090 ALL_REGS:34320,34320 MEM:770,770
  a2(r98,l0) costs: AREG:-110,-110 DREG:220,220 CREG:220,220 BREG:220,220 SIREG:220,220 DIREG:220,220 AD_REGS:220,220 CLOBBERED_REGS:220,220 Q_REGS:220,220 NON_Q_REGS:220,220 TLS_GOTBASE_REGS:220,220 GENERAL_REGS:220,220 SSE_FIRST_REG:660,660 NO_REX_SSE_REGS:660,660 SSE_REGS:660,660 MMX_REGS:2860,2860 INT_SSE_REGS:2860,2860 ALL_REGS:46640,46640 MEM:1210,1210
  a3(r93,l0) costs: AREG:220,220 DREG:220,220 CREG:220,220 BREG:220,220 SIREG:220,220 DIREG:-110,-110 AD_REGS:220,220 CLOBBERED_REGS:220,220 Q_REGS:220,220 NON_Q_REGS:220,220 TLS_GOTBASE_REGS:220,220 GENERAL_REGS:220,220 SSE_FIRST_REG:1320,1320 NO_REX_SSE_REGS:1320,1320 SSE_REGS:1320,1320 MMX_REGS:2530,2530 INT_SSE_REGS:2530,2530 ALL_REGS:34760,34760 MEM:1210,1210
  a4(r86,l0) costs: AREG:220,220 DREG:220,220 CREG:220,220 BREG:220,220 SIREG:-110,-110 DIREG:220,220 AD_REGS:220,220 CLOBBERED_REGS:220,220 Q_REGS:220,220 NON_Q_REGS:220,220 TLS_GOTBASE_REGS:220,220 GENERAL_REGS:220,220 SSE_FIRST_REG:1314,11994 NO_REX_SSE_REGS:1314,11994 SSE_REGS:1314,11994 MMX_REGS:2084,25224 INT_SSE_REGS:2084,25224 ALL_REGS:34220,411580 MEM:769,11449
  a5(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:582,21942 NO_REX_SSE_REGS:582,21942 SSE_REGS:582,21942 MMX_REGS:582,44192 INT_SSE_REGS:582,44192 ALL_REGS:9700,668300 MEM:97,17897
  a6(r84,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:582,5922 NO_REX_SSE_REGS:582,5922 SSE_REGS:582,5922 MMX_REGS:1261,12831 INT_SSE_REGS:1261,12831 ALL_REGS:20564,209244 MEM:485,4935
  a7(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:1902,1902 NO_REX_SSE_REGS:1902,1902 SSE_REGS:1902,1902 MMX_REGS:3720,3720 INT_SSE_REGS:3720,3720 ALL_REGS:45068,45068 MEM:1695,1695
  a8(r92,l0) costs: AREG:220,220 DREG:220,220 CREG:220,220 BREG:220,220 SIREG:220,220 DIREG:-110,-110 AD_REGS:220,220 CLOBBERED_REGS:220,220 Q_REGS:220,220 NON_Q_REGS:220,220 TLS_GOTBASE_REGS:220,220 GENERAL_REGS:220,220 SSE_FIRST_REG:1320,1320 NO_REX_SSE_REGS:1320,1320 SSE_REGS:1320,1320 MMX_REGS:2530,2530 INT_SSE_REGS:2530,2530 ALL_REGS:34760,34760 MEM:1210,1210
  a9(r91,l0) costs: AREG:220,220 DREG:220,220 CREG:220,220 BREG:220,220 SIREG:-110,-110 DIREG:220,220 AD_REGS:220,220 CLOBBERED_REGS:220,220 Q_REGS:220,220 NON_Q_REGS:220,220 TLS_GOTBASE_REGS:220,220 GENERAL_REGS:220,220 SSE_FIRST_REG:1320,1320 NO_REX_SSE_REGS:1320,1320 SSE_REGS:1320,1320 MMX_REGS:2860,2860 INT_SSE_REGS:2860,2860 ALL_REGS:46640,46640 MEM:1320,1320
  a10(r99,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:660,660 NO_REX_SSE_REGS:660,660 SSE_REGS:660,660 MMX_REGS:1430,1430 INT_SSE_REGS:1430,1430 ALL_REGS:23320,23320 MEM:660,660
  a11(r84,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:5340,5340 NO_REX_SSE_REGS:5340,5340 SSE_REGS:5340,5340 MMX_REGS:11570,11570 INT_SSE_REGS:11570,11570 ALL_REGS:188680,188680 MEM:4450,4450
  a12(r86,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:10680,10680 NO_REX_SSE_REGS:10680,10680 SSE_REGS:10680,10680 MMX_REGS:23140,23140 INT_SSE_REGS:23140,23140 ALL_REGS:377360,377360 MEM:10680,10680
  a13(r87,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21360,21360 NO_REX_SSE_REGS:21360,21360 SSE_REGS:21360,21360 MMX_REGS:43610,43610 INT_SSE_REGS:43610,43610 ALL_REGS:658600,658600 MEM:17800,17800


Pass 1 for finding pseudo/allocno costs

    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r98: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r86: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r86,l1) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS

  a0(r100,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:660,660 NO_REX_SSE_REGS:660,660 SSE_REGS:660,660 MMX_REGS:1430,1430 INT_SSE_REGS:1430,1430 ALL_REGS:23320,23320 MEM:660,660
  a1(r85,l0) costs: AREG:440,440 DREG:440,440 CREG:440,440 BREG:440,440 SIREG:440,440 DIREG:220,-110 AD_REGS:440,440 CLOBBERED_REGS:220,220 Q_REGS:440,440 NON_Q_REGS:220,220 TLS_GOTBASE_REGS:220,220 GENERAL_REGS:220,220 SSE_FIRST_REG:1980,1980 NO_REX_SSE_REGS:1980,1980 SSE_REGS:1980,1980 MMX_REGS:4180,4180 INT_SSE_REGS:2750,2750 ALL_REGS:34980,34980 MEM:1980,1980
  a2(r98,l0) costs: AREG:220,-110 DREG:440,440 CREG:440,440 BREG:440,440 SIREG:440,440 DIREG:440,440 AD_REGS:220,220 CLOBBERED_REGS:220,220 Q_REGS:220,220 NON_Q_REGS:440,440 TLS_GOTBASE_REGS:440,440 GENERAL_REGS:220,220 SSE_FIRST_REG:1980,1980 NO_REX_SSE_REGS:1980,1980 SSE_REGS:1980,1980 MMX_REGS:4290,4290 INT_SSE_REGS:2860,2860 ALL_REGS:46640,46640 MEM:1870,1870
  a3(r93,l0) costs: AREG:440,440 DREG:440,440 CREG:440,440 BREG:440,440 SIREG:440,440 DIREG:220,-110 AD_REGS:440,440 CLOBBERED_REGS:220,220 Q_REGS:440,440 NON_Q_REGS:220,220 TLS_GOTBASE_REGS:220,220 GENERAL_REGS:220,220 SSE_FIRST_REG:1980,1980 NO_REX_SSE_REGS:1980,1980 SSE_REGS:1980,1980 MMX_REGS:4290,4290 INT_SSE_REGS:2860,2860 ALL_REGS:35420,35420 MEM:1980,1980
  a4(r86,l0) costs: AREG:440,440 DREG:440,440 CREG:440,440 BREG:440,440 SIREG:220,-110 DIREG:440,440 AD_REGS:440,440 CLOBBERED_REGS:220,220 Q_REGS:440,440 NON_Q_REGS:220,220 TLS_GOTBASE_REGS:220,220 GENERAL_REGS:220,220 SSE_FIRST_REG:1974,12654 NO_REX_SSE_REGS:1974,12654 SSE_REGS:1974,12654 MMX_REGS:4168,27308 INT_SSE_REGS:2738,25878 ALL_REGS:34874,412234 MEM:1974,12654
  a5(r87,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:582,21942 NO_REX_SSE_REGS:582,21942 SSE_REGS:582,21942 MMX_REGS:1164,47444 INT_SSE_REGS:1164,47444 ALL_REGS:10282,674222 MEM:582,18382
  a6(r84,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:582,5922 NO_REX_SSE_REGS:582,5922 SSE_REGS:582,5922 MMX_REGS:1261,12831 INT_SSE_REGS:1261,12831 ALL_REGS:20564,209244 MEM:485,4935
  a7(r88,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:1902,1902 NO_REX_SSE_REGS:1902,1902 SSE_REGS:1902,1902 MMX_REGS:4121,4121 INT_SSE_REGS:4121,4121 ALL_REGS:46310,46310 MEM:1695,1695
  a8(r92,l0) costs: AREG:440,440 DREG:440,440 CREG:440,440 BREG:440,440 SIREG:440,440 DIREG:220,-110 AD_REGS:440,440 CLOBBERED_REGS:220,220 Q_REGS:440,440 NON_Q_REGS:220,220 TLS_GOTBASE_REGS:220,220 GENERAL_REGS:220,220 SSE_FIRST_REG:1980,1980 NO_REX_SSE_REGS:1980,1980 SSE_REGS:1980,1980 MMX_REGS:4290,4290 INT_SSE_REGS:2860,2860 ALL_REGS:35420,35420 MEM:1980,1980
  a9(r91,l0) costs: AREG:440,440 DREG:440,440 CREG:440,440 BREG:440,440 SIREG:220,-110 DIREG:440,440 AD_REGS:440,440 CLOBBERED_REGS:220,220 Q_REGS:440,440 NON_Q_REGS:220,220 TLS_GOTBASE_REGS:220,220 GENERAL_REGS:220,220 SSE_FIRST_REG:1980,1980 NO_REX_SSE_REGS:1980,1980 SSE_REGS:1980,1980 MMX_REGS:4290,4290 INT_SSE_REGS:2860,2860 ALL_REGS:46640,46640 MEM:1980,1980
  a10(r99,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:660,660 NO_REX_SSE_REGS:660,660 SSE_REGS:660,660 MMX_REGS:1430,1430 INT_SSE_REGS:1430,1430 ALL_REGS:23320,23320 MEM:660,660
  a11(r84,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:5340,5340 NO_REX_SSE_REGS:5340,5340 SSE_REGS:5340,5340 MMX_REGS:11570,11570 INT_SSE_REGS:11570,11570 ALL_REGS:188680,188680 MEM:4450,4450
  a12(r86,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:10680,10680 NO_REX_SSE_REGS:10680,10680 SSE_REGS:10680,10680 MMX_REGS:23140,23140 INT_SSE_REGS:23140,23140 ALL_REGS:377360,377360 MEM:10680,10680
  a13(r87,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21360,21360 NO_REX_SSE_REGS:21360,21360 SSE_REGS:21360,21360 MMX_REGS:46280,46280 INT_SSE_REGS:46280,46280 ALL_REGS:663940,663940 MEM:17800,17800

   Insn 51(l0): point = 0
   Insn 50(l0): point = 2
   Insn 47(l0): point = 5
   Insn 46(l0): point = 8
   Insn 45(l0): point = 10
   Insn 39(l0): point = 12
   Insn 38(l0): point = 14
   Insn 37(l0): point = 16
   Insn 34(l0): point = 18
   Insn 63(l0): point = 20
   Insn 33(l0): point = 22
   Insn 32(l0): point = 24
   Insn 31(l0): point = 26
   Insn 30(l0): point = 28
   Insn 7(l0): point = 31
   Insn 65(l0): point = 34
   Insn 6(l0): point = 37
   Insn 5(l0): point = 39
   Insn 21(l0): point = 41
   Insn 19(l0): point = 44
   Insn 18(l0): point = 46
   Insn 15(l0): point = 48
   Insn 14(l0): point = 50
   Insn 13(l0): point = 52
   Insn 12(l0): point = 54
   Insn 11(l0): point = 56
   Insn 10(l0): point = 58
   Insn 4(l0): point = 60
   Insn 27(l1): point = 63
   Insn 26(l1): point = 65
   Insn 24(l1): point = 67
   Insn 23(l1): point = 69
 a0(r100): [10..10]
 a1(r85): [15..18]
 a2(r98): [19..20]
 a3(r93): [25..26]
 a4(r86): [34..39] [29..31]
 a5(r87): [37..37]
 a6(r84): [37..41]
 a7(r88): [42..48]
 a8(r92): [53..54]
 a9(r91): [57..58]
 a10(r99): [60..60]
 a11(r84): [63..71]
 a12(r86): [63..71]
 a13(r87): [63..71]
      Moving ranges of a13r87 to a5r87:  [63..71]
      Moving ranges of a12r86 to a4r86:  [63..71]
      Moving ranges of a11r84 to a6r84:  [63..71]
Compressing live ranges: from 72 to 21 - 29%
Ranges after the compression:
 a0(r100): [0..0]
 a1(r85): [1..2]
 a2(r98): [3..4]
 a3(r93): [5..6]
 a4(r86): [19..20] [7..11]
 a5(r87): [19..20] [10..10]
 a6(r84): [19..20] [10..11]
 a7(r88): [12..13]
 a8(r92): [14..15]
 a9(r91): [16..17]
 a10(r99): [18..18]
+++Allocating 56 bytes for conflict table (uncompressed size 112)
;; a0(r100,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r85,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r98,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r93,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r86,l0) conflicts: a5(r87,l0) a6(r84,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r87,l0) conflicts: a4(r86,l0) a6(r84,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a6(r84,l0) conflicts: a4(r86,l0) a5(r87,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a7(r88,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a8(r92,l0) conflicts:
;;     total conflict hard regs: 4
;;     conflict hard regs: 4

;; a9(r91,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a10(r99,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:


  cp0:a1(r85)<->a2(r98)@110:move
  cp1:a6(r84)<->a7(r88)@12:shuffle
  pref0:a2(r98)<-hr0@165
  pref1:a3(r93)<-hr5@165
  pref2:a8(r92)<-hr5@165
  pref3:a9(r91)<-hr4@165
  pref4:a4(r86)<-hr4@165
  pref5:a1(r85)<-hr5@165
  regions=2, blocks=10, points=21
    allocnos=14 (big 0), copies=2, conflicts=0, ranges=14

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 9 8 7 6 5 4 3 2
    all: 0r100 1r85 2r98 3r93 4r86 5r87 6r84 7r88 8r92 9r91 10r99
    modified regnos: 84 85 86 87 88 91 92 93 98 99 100
    border:
    Pressure: GENERAL_REGS=3
    Hard reg set forest:
      0:( 0-6 8-15 20-51)@0
        1:( 0-6 36-43)@86332
          2:( 0-3 5-6 36-43)@12540
      Allocno a0r100 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-75)
      Allocno a1r85 of GENERAL_REGS(15) has 14 avail. regs  0-3 5-6 36-43, node:  0-3 5-6 36-43 (confl regs =  4 7-35 44-75)
      Allocno a2r98 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-75)
      Allocno a3r93 of GENERAL_REGS(15) has 14 avail. regs  0-3 5-6 36-43, node:  0-3 5-6 36-43 (confl regs =  4 7-35 44-75)
      Allocno a4r86 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-75)
      Allocno a5r87 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-75)
      Allocno a6r84 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-75)
      Allocno a7r88 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-75)
      Allocno a8r92 of GENERAL_REGS(15) has 14 avail. regs  0-3 5-6 36-43, node:  0-3 5-6 36-43 (confl regs =  4 7-35 44-75)
      Allocno a9r91 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-75)
      Allocno a10r99 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-75)
      Forming thread from colorable bucket:
        Forming thread by copy 0:a1r85-a2r98 (freq=110):
          Result (freq=440): a1r85(220) a2r98(220)
        Forming thread by copy 1:a6r84-a7r88 (freq=12):
          Result (freq=1304): a6r84(987) a7r88(317)
      Pushing a10(r99,l0)(cost 0)
      Pushing a0(r100,l0)(cost 0)
      Pushing a9(r91,l0)(cost 0)
      Pushing a8(r92,l0)(cost 0)
      Pushing a3(r93,l0)(cost 0)
      Pushing a2(r98,l0)(cost 0)
      Pushing a1(r85,l0)(cost 0)
      Pushing a7(r88,l0)(cost 0)
      Pushing a6(r84,l0)(cost 0)
      Pushing a4(r86,l0)(cost 0)
      Pushing a5(r87,l0)(cost 0)
      Popping a5(r87,l0)  --         assign reg 0
      Popping a4(r86,l0)  --         assign reg 4
      Popping a6(r84,l0)  --         assign reg 1
      Popping a7(r88,l0)  --         assign reg 1
      Popping a1(r85,l0)  --         assign reg 5
      Popping a2(r98,l0)  --         assign reg 0
      Popping a3(r93,l0)  --         assign reg 5
      Popping a8(r92,l0)  --         assign reg 5
      Popping a9(r91,l0)  --         assign reg 4
      Popping a0(r100,l0)  --         assign reg 0
      Popping a10(r99,l0)  --         assign reg 0
Disposition:
    6:r84  l0     1    1:r85  l0     5    4:r86  l0     4    5:r87  l0     0
    7:r88  l0     1    9:r91  l0     4    8:r92  l0     5    3:r93  l0     5
    2:r98  l0     0   10:r99  l0     0    0:r100 l0     0
New iteration of spill/restore move
+++Costs: overall -660, reg -660, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


main

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 4 [si] 5 [di] 7 [sp] 17 [flags]
;;  ref usage 	r0={6d,3u} r1={5d} r2={5d} r4={8d,3u} r5={8d,3u} r6={1d,9u} r7={1d,13u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,8u} r17={12d,3u} r18={4d} r19={1d,13u,2e} r20={5d} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={5d} r37={5d} r38={4d} r39={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r84={1d,1u} r85={1d,1u} r86={3d,2u} r87={2d,3u} r88={1d,2u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r98={1d,1u} r99={1d} r100={1d} 
;;    total ref usage 386{316d,68u,2e} in 32{28 regular + 4 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 8 4 2 NOTE_INSN_FUNCTION_BEG)
(insn 4 2 10 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 19 frame)
                        (const_int -8 [0xfffffffffffffff8])) [14 D.49887+0 S8 A64])
                (unspec:DI [
                        (mem/v/f:DI (const_int 40 [0x28]) [9 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_SET))
            (set (reg:DI 99)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "factorial.cpp":4:1 1159 {stack_protect_set_1_di}
     (expr_list:REG_UNUSED (reg:DI 99)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 10 4 11 2 (parallel [
            (set (reg/f:DI 91)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "factorial.cpp":6:9 210 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4]))
            (nil))))
(insn 11 10 12 2 (set (reg:DI 4 si)
        (reg/f:DI 91)) "factorial.cpp":6:9 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4]))
            (nil))))
(insn 12 11 13 2 (set (reg/f:DI 92)
        (symbol_ref:DI ("_ZSt3cin") [flags 0x40]  <var_decl 0x7f584a229e10 cin>)) "factorial.cpp":6:9 74 {*movdi_internal}
     (expr_list:REG_EQUIV (symbol_ref:DI ("_ZSt3cin") [flags 0x40]  <var_decl 0x7f584a229e10 cin>)
        (nil)))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (reg/f:DI 92)) "factorial.cpp":6:9 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 92)
        (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt3cin") [flags 0x40]  <var_decl 0x7f584a229e10 cin>)
            (nil))))
(call_insn 14 13 15 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSirsERi") [flags 0x41]  <function_decl 0x7f584a157e00 operator>>>) [0 operator>> S1 A8])
            (const_int 0 [0]))) "factorial.cpp":6:9 824 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSirsERi") [flags 0x41]  <function_decl 0x7f584a157e00 operator>>>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 15 14 18 2 (set (reg:SI 88 [ n.0_14 ])
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [5 n+0 S4 A32])) "factorial.cpp":9:11 75 {*movsi_internal}
     (nil))
(insn 18 15 19 2 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 88 [ n.0_14 ])
            (const_int 1 [0x1]))) "factorial.cpp":9:11 11 {*cmpsi_1}
     (nil))
(jump_insn 19 18 20 2 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 57)
            (pc))) "factorial.cpp":9:11 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (int_list:REG_BR_PROB 118111604 (nil)))
 -> 57)
(note 20 19 21 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 5 3 (parallel [
            (set (reg:SI 84 [ _6 ])
                (plus:SI (reg:SI 88 [ n.0_14 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 88 [ n.0_14 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 5 21 6 3 (set (reg/v:SI 86 [ f ])
        (const_int 1 [0x1])) "factorial.cpp":8:4 75 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
(insn 6 5 25 3 (set (reg/v:SI 87 [ i ])
        (const_int 2 [0x2])) "factorial.cpp":7:4 75 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 2 [0x2])
        (nil)))
(code_label 25 6 22 4 6 (nil) [1 uses])
(note 22 25 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 4 (parallel [
            (set (reg/v:SI 86 [ f ])
                (mult:SI (reg/v:SI 86 [ f ])
                    (reg/v:SI 87 [ i ])))
            (clobber (reg:CC 17 flags))
        ]) "factorial.cpp":11:5 408 {*mulsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 24 23 26 4 (parallel [
            (set (reg/v:SI 87 [ i ])
                (plus:SI (reg/v:SI 87 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "factorial.cpp":12:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 26 24 27 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 84 [ _6 ])
            (reg/v:SI 87 [ i ]))) "factorial.cpp":9:11 11 {*cmpsi_1}
     (nil))
(jump_insn 27 26 64 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 25)
            (pc))) "factorial.cpp":9:11 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 955630228 (nil)))
 -> 25)
(note 64 27 65 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(jump_insn 65 64 66 5 (set (pc)
        (label_ref 28)) 807 {jump}
     (nil)
 -> 28)
(barrier 66 65 57)
(code_label 57 66 56 6 8 (nil) [1 uses])
(note 56 57 7 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 7 56 28 6 (set (reg/v:SI 86 [ f ])
        (const_int 1 [0x1])) "factorial.cpp":8:4 75 {*movsi_internal}
     (nil))
(code_label 28 7 29 7 5 (nil) [1 uses])
(note 29 28 30 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 7 (set (reg:SI 4 si)
        (reg/v:SI 86 [ f ])) "factorial.cpp":14:10 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 86 [ f ])
        (nil)))
(insn 31 30 32 7 (set (reg/f:DI 93)
        (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7f584a229ea0 cout>)) "factorial.cpp":14:10 74 {*movdi_internal}
     (expr_list:REG_EQUIV (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7f584a229ea0 cout>)
        (nil)))
(insn 32 31 33 7 (set (reg:DI 5 di)
        (reg/f:DI 93)) "factorial.cpp":14:10 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 93)
        (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7f584a229ea0 cout>)
            (nil))))
(call_insn 33 32 63 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x7f584a4e3500 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) "factorial.cpp":14:10 824 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x7f584a4e3500 operator<<>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 63 33 34 7 (set (reg:DI 98)
        (reg:DI 0 ax)) "factorial.cpp":14:10 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 34 63 37 7 (set (reg/f:DI 85 [ _8 ])
        (reg:DI 98)) "factorial.cpp":14:10 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 98)
        (nil)))
(insn 37 34 38 7 (set (reg:DI 4 si)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_") [flags 0x41]  <function_decl 0x7f584a4f6600 endl>)
                    ] UNSPEC_GOTPCREL)) [25  S8 A8])) "factorial.cpp":14:15 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_") [flags 0x41]  <function_decl 0x7f584a4f6600 endl>)
        (nil)))
(insn 38 37 39 7 (set (reg:DI 5 di)
        (reg/f:DI 85 [ _8 ])) "factorial.cpp":14:15 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 85 [ _8 ])
        (nil)))
(call_insn 39 38 45 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEPFRSoS_E") [flags 0x41]  <function_decl 0x7f584a4d3000 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) "factorial.cpp":14:15 824 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSolsEPFRSoS_E") [flags 0x41]  <function_decl 0x7f584a4d3000 operator<<>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 45 39 46 7 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -8 [0xfffffffffffffff8])) [14 D.49887+0 S8 A64])
                        (mem/v/f:DI (const_int 40 [0x28]) [9 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_TEST))
            (clobber (reg:DI 100))
        ]) "factorial.cpp":16:1 1164 {stack_protect_test_1_di}
     (expr_list:REG_UNUSED (reg:DI 100)
        (nil)))
(jump_insn 46 45 58 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 49)
            (pc))) "factorial.cpp":16:1 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1073312332 (nil)))
 -> 49)
(note 58 46 47 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(call_insn 47 58 48 8 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f5849e6f000 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) "factorial.cpp":16:1 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f5849e6f000 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
(barrier 48 47 49)
(code_label 49 48 59 9 7 (nil) [1 uses])
(note 59 49 50 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 50 59 51 9 (set (reg/i:SI 0 ax)
        (const_int 0 [0])) "factorial.cpp":16:1 75 {*movsi_internal}
     (nil))
(insn 51 50 0 9 (use (reg/i:SI 0 ax)) "factorial.cpp":16:1 -1
     (nil))

;; Function _GLOBAL__sub_I_main (_GLOBAL__sub_I_main, funcdef_no=2279, decl_uid=49810, cgraph_uid=1013, symbol_order=1188) (executed once)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs




Pass 1 for finding pseudo/allocno costs



   Insn 5(l0): point = 0
Compressing live ranges: from 3 to 0 - 0%
Ranges after the compression:
+++Allocating 0 bytes for conflict table (uncompressed size 0)

  regions=1, blocks=3, points=0
    allocnos=0 (big 0), copies=0, conflicts=0, ranges=0

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all:
    modified regnos:
    border:
    Pressure:
    Hard reg set forest:
      0:( 0-6 8-15 20-51)@0
      Forming thread from colorable bucket:
Disposition:
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


_GLOBAL__sub_I_main

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 7 [sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={2d} r5={2d} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d,2u} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={2d} r37={2d} r38={1d} r39={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} 
;;    total ref usage 94{86d,8u,0e} in 1{0 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(call_insn/j 5 2 6 2 (call (mem:QI (symbol_ref:DI ("_Z41__static_initialization_and_destruction_0ii.constprop.0") [flags 0x3]  <function_decl 0x7f5849e4a400 __static_initialization_and_destruction_0.constprop>) [0 __static_initialization_and_destruction_0.constprop S1 A8])
        (const_int 0 [0])) "factorial.cpp":16:1 817 {*sibcall}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Z41__static_initialization_and_destruction_0ii.constprop.0") [flags 0x3]  <function_decl 0x7f5849e4a400 __static_initialization_and_destruction_0.constprop>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(barrier 6 5 0)
